#+TITLE: Integration of Feedback with Elasticsearch
#+AUTHOR: VLEAD
#+DATE: [2016-07-26 Tue]
#+SETUPFILE: ../../org-templates/level-2.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Introduction
  This document explains the code snippet which is integrated to =elasticsearch= service 
* Implementation
** Configuration
  Configuration variable of both =feedback= and =elasticsearch= micro services.
#+BEGIN_SRC python :tangle config.py
ELASTIC_SEARCH_URL = "http://10.2.56.2:9200"
ELASTIC_SEARCH_INDEX_NAME = "feedback"
ELASTIC_SEARCH_DOCUMENT_TYPE = "feedback_dump"
FEEDBACK_URL = "http://feedback.vlabs.ac.in"
KEY = "place-key-here"
#+END_SRC
** Implementation of methods
   Follwing code computes the date of previous day (based on server time) and invoke http request
   to =feedback= service for computed date to get the feedback dump and pushes them to =elasticsearch= service
#+BEGIN_SRC python :tangle feedback-elastic-search.py
import os
import requests
import json
from config import *
from datetime import datetime, timedelta, date
from dateutil.rrule import rrule, DAILY

yestr_day = datetime.now() - timedelta(days=1)
yestr_day_date = yestr_day.strftime('%d-%m-%Y')

FEEDBACK_DUMP_URL = "%s/feedback_dump?date=%s&key=%s" % (FEEDBACK_URL, yestr_day_date, KEY)
ELASTIC_SEARCH_URL = "%s/%s/%s" % (ELASTIC_SEARCH_URL, ELASTIC_SEARCH_INDEX_NAME, ELASTIC_SEARCH_DOCUMENT_TYPE)

def get_feedback_dump(API_URL):
    try:
	resp = requests.get(API_URL)
	if resp.status_code == 200:
	    feedback_dump = resp.json()
	    return (resp.status_code, feedback_dump)
	else:
	    return (resp.status_code, feedback_dump)
    except Exception as e:
	print str(e)

def post_feedback_to_kebana(ELASTIC_SEARCH_URL, feedback):
    try:
	resp = requests.post(ELASTIC_SEARCH_URL, data=json.dumps(feedback))
	if not resp.status_code == 201:
	    return False
	else:
	    return True
    except Exception as e:
	print str(e)
	return False
"""
(status_code, feedback_dump) = get_feedback_dump(FEEDBACK_DUMP_URL)

if(status_code == 200):
    for feedback in feedback_dump:
	if(post_feedback_to_kebana(ELASTIC_SEARCH_URL, feedback)):
	    print "Feedback : %s is added" % (feedback)
	else:
	    print status_code
else:
    print "Error in getting feedback dump"
"""
def dump_historic_feedback_data(start_date, end_date):

    for dt in rrule(DAILY, dtstart=start_date, until=end_date):
	date = dt.strftime("%d-%m-%Y")
	FEEDBACK_DUMP_URL = "%s/feedback_dump?date=%s&key=%s" % (FEEDBACK_URL, date, KEY)
	(status_code, feedback_dump) = get_feedback_dump(FEEDBACK_DUMP_URL)

	if(status_code == 200):
	    for feedback in feedback_dump:
		if(post_feedback_to_kebana(ELASTIC_SEARCH_URL, feedback)):
		    print "Feedback : %s is added" % (feedback)
		else:
		    print status_code
	else:
	    print "Error in getting feedback dump on date : " % (date)

start_date = date(2009, 5, 30)
end_date = date(2009, 6, 9)
dump_historic_feedback_data(start_date, end_date)
  
#+END_SRC
